<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="Plan">

	
	<select id="callPlan" resultType="kh.spring.dto.PlanDTO">
		select * from plan where seq = #{value}  
	</select>
	
	<insert id="createTheme">
		<selectKey keyProperty="seq" resultType="int" order="BEFORE">
			select plan_seq.nextval from dual  
		</selectKey>
		insert into plan values (#{seq}, #{mem_seq}, #{title},to_date(#{startDate},'YYYY/MM/DD'),to_date(#{endDate},'YYYY/MM/DD'),#{theme},0,'',default)
	</insert>
	
	<update id="changeTheme">
		update plan set title = #{title},startDate=to_date(#{startDate},'YYYY/MM/DD'),endDate=TO_DATE(#{endDate},YYYY/MM/DD),theme=#{theme} where seq = #{seq}
	</update>
	
	<insert id="saveList">
		insert into detail_plan values(#{par_seq},#{area_seq},(select startDate from plan where seq=#{par_seq}), detail_plan_seq.nextval)
	</insert>

	<select id="listCount" resultType="int">
		select count(*) from plan where mem_seq = #{value}
	</select>
	
	<select id="getList" resultType="kh.spring.dto.PlanDTO">
		select * from (select plan.* , row_number() over(order by seq desc) rn from plan where mem_seq = #{seq})where rn between #{startNum} and #{endNum}
		
	</select>
	
	<select id="detailPlanSort" resultType="kh.spring.dto.DetailPlanDTO">
		select * from detail_plan where par_seq = #{seq} and plan_date = #{date} order by seq
	</select>
	
	<select id="detailPlanSeq" resultType="int">
		select seq from detail_plan where area_seq = par_seq=#{seq}
	</select>
	
	<select id="planListPrint" resultType="kh.spring.dto.AreaDTO">
		select * from area where seq=#{value}
	</select>
	
	<select id="getDetail" resultType="kh.spring.dto.PlanDTO">
		select * from plan where seq=#{value}
	</select>
	
	<update id="sortDatePlan">
		update detail_plan set plan_date = TO_DATE(#{day},'YYYY/MM/DD) where seq = #{seq}
	</update>
	
	<update id="sortDate">
		update detail_plan set seq = decode(seq,#{firstSeq},#{secondSeq},#{secondSeq},#{firstSeq}) where seq in (#{firstSeq},#{secondSeq})
	</update>
	
	<delete id="deleteDatePlan">
		delete from detail_plan where seq = #{seq}
	</delete>
	
	<update id="insertMemo">
		update plan set memo = #{memo} where seq = #{seq}
	</update>

	<delete id="deletePlan">
		delete from plan where seq = #{seq}
	</delete>


</mapper> 